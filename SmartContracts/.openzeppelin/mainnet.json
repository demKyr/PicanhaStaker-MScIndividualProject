{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xf7A2a6bD2117A7b907c461d357f0cd4c86b5430A",
    "txHash": "0xaea326247adb27796523dc8c803d7f91e6f41555937d27ccb0a880d67be1d56c"
  },
  "proxies": [
    {
      "address": "0xA43A7c62D56dF036C187E1966c03E2799d8987ed",
      "txHash": "0x561d84c297d80d819e66a39f3c497e6bd7f254598f631ee5f785b2a6f2db55b8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "30375937ccbd016082bf7983135b443af126e9fc94f39566b71b22eaee1ee829": {
      "address": "0x8d991FaD08B57bF3541D1911Df82B3ee12c59052",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "stakingTokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:13"
          },
          {
            "label": "stakeManagerContractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:16"
          },
          {
            "label": "validatorShareContractAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:19"
          },
          {
            "label": "whitelistAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:23"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:26"
          },
          {
            "label": "phi",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:30"
          },
          {
            "label": "distPhi",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:34"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:37"
          },
          {
            "label": "unbondingWithdrawals",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_struct(Withdrawal)7237_storage)",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:41"
          },
          {
            "label": "totalAllocated",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_mapping(t_bool,t_struct(Allocation)7244_storage))",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:44"
          },
          {
            "label": "allocations",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_struct(Allocation)7244_storage)))",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:47"
          },
          {
            "label": "recipients",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_mapping(t_bool,t_array(t_address)dyn_storage))",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:50"
          },
          {
            "label": "distributors",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_mapping(t_bool,t_array(t_address)dyn_storage))",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:53"
          },
          {
            "label": "epsilon",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:56"
          },
          {
            "label": "allowStrict",
            "offset": 0,
            "slot": "14",
            "type": "t_bool",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TruStakeMATICv2Storage",
            "src": "contracts/main/TruStakeMATICv2Storage.sol:62"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "63",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "63",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "64",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "115",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "165",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "217",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "218",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "219",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "264",
            "type": "t_contract(IERC20Upgradeable)1242",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "264",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1242": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_struct(Allocation)7244_storage)))": {
            "label": "mapping(address => mapping(address => mapping(bool => struct Allocation)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(bool => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bool,t_struct(Allocation)7244_storage))": {
            "label": "mapping(address => mapping(bool => struct Allocation))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_array(t_address)dyn_storage)": {
            "label": "mapping(bool => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bool,t_struct(Allocation)7244_storage)": {
            "label": "mapping(bool => struct Allocation)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Withdrawal)7237_storage)": {
            "label": "mapping(uint256 => struct Withdrawal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Allocation)7244_storage": {
            "label": "struct Allocation",
            "members": [
              {
                "label": "maticAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sharePriceNum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sharePriceDenom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Withdrawal)7237_storage": {
            "label": "struct Withdrawal",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "allAddresses": [
        "0x8d991FaD08B57bF3541D1911Df82B3ee12c59052",
        "0xBf3B3b9368262Ed9BD06B621149CA947984D1B31"
      ]
    }
  }
}
